from aiogram import types
from misc import dp,bot
import sqlite3
from .sqlit import reg_bd,reg_in_users,cheak_traf,cheak_chat_id
reg_bd()

list_channel = cheak_traf()
name_channel_1 = list_channel[0]
name_channel_2 = list_channel[1]
name_channel_3 = list_channel[2]

def obnovlenie():
    global name_channel_1,name_channel_2,name_channel_3
    list_channel = cheak_traf()
    name_channel_1 = list_channel[0]
    name_channel_2 = list_channel[1]
    name_channel_3 = list_channel[2]


def markup_find():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bat1 = types.InlineKeyboardButton(text="üîé –ü–ê–†–ï–ù–¨")
    bat2 = types.InlineKeyboardButton(text="üîé –î–ï–í–£–®–ö–ê")
    bat3 = types.InlineKeyboardButton(text="üé≤ –°–õ–£–ß–ê–ô–ù–´ –ü–û–õ üé≤")
    markup.add(bat1,bat2)
    markup.add(bat3)
    return markup

def markup_gender():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bat1 = types.InlineKeyboardButton(text="üöπ –Ø –ø–∞—Ä–µ–Ω—å")
    bat2 = types.InlineKeyboardButton(text="üö∫ –Ø –¥–µ–≤—É—à–∫–∞")
    markup.add(bat1,bat2)
    return markup

def markup_stop():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bat1 = types.InlineKeyboardButton(text="‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫")
    markup.add(bat1)
    return markup

def markup_stop_dialog():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bat1 = types.InlineKeyboardButton(text="‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥")
    markup.add(bat1)
    return markup

def markup_channels():
    markup = types.InlineKeyboardMarkup()
    channel1 = types.InlineKeyboardButton(text='1Ô∏è‚É£ –ü–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª', url=f'{name_channel_1}')
    channel2 = types.InlineKeyboardButton(text='2Ô∏è‚É£ –í—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª', url=f'{name_channel_2}')
    channel3 = types.InlineKeyboardButton(text='3Ô∏è‚É£ –¢—Ä–µ—Ç–∏–π –∫–∞–Ω–∞–ª', url=f'{name_channel_3}')
    bat_cheack = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üîê', callback_data='check')

    markup.add(channel1)
    markup.add(channel2)
    markup.add(channel3)
    markup.add(bat_cheack)

    return markup


@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    try:
        first_name = message.from_user.first_name
    except:
        first_name = 'anonim'
    if message.text[6:] == '':
        reg_in_users(chat_id=message.chat.id,first_name=first_name,ref= '1')
    else:
        reg_in_users(chat_id=message.chat.id, first_name=first_name, ref=message.text[6:])

    await message.answer(text=f"""<b>–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} üòª

üíö–ù–∞—à –±–æ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã —Å–ø–æ–Ω—Å–æ—Ä–æ–≤ üëá</b>""",reply_markup=markup_channels())


@dp.callback_query_handler(text_startswith='check')  # –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –Ø –ü–û–î–ü–ò–°–ê–õ–°–Ø. –î–ï–õ–ê–ï–ú –ü–†–û–í–ï–†–ö–£
async def check(call: types.callback_query):
    id_list = cheak_chat_id()

    try:
        proverka1 = (await bot.get_chat_member(chat_id=id_list[0], user_id=call.message.chat.id)).status
    except:
        proverka1 = 'member'

    try:
        proverka2 = (await bot.get_chat_member(chat_id=id_list[1], user_id=call.message.chat.id)).status
    except:
        proverka2 = 'member'

    try:
        proverka3 = (await bot.get_chat_member(chat_id=id_list[2], user_id=call.message.chat.id)).status
    except:
        proverka3 = 'member'


    if (proverka1 != 'left' and proverka2 != 'left' and proverka3 != 'left'):
        await bot.send_message(chat_id=call.message.chat.id,
                               text=f'–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É ‚ù§Ô∏è\n'
                                    f'<b>–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª üëá</b>',
                               reply_markup=markup_gender())


    else:
        await call.message.answer(text=f"""<b>–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã —Å–ø–æ–Ω—Å–æ—Ä–æ–≤ ‚ùå
        
–ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É üëá</b>""",reply_markup=markup_channels())


    await bot.answer_callback_query(callback_query_id = call.id)